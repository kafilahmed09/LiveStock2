
@model IEnumerable<BES.Models.Data.School>
@{
    ViewData["Title"] = "Index";
}
<section class="content-header">
    <div class="row">
        <h1>
            Un Verify @ViewBag.Section Section Evidences
            @*<small>BES</small>*@
        </h1>
        @*<div class="col-sm-10">
                <ol class="breadcrumb">
                    <li> @Html.ActionLink("List", "Index") </li>
                    <li class="active">
                        <strong>Edit</strong>
                    </li>
                </ol>
            </div>
            <div class="col-sm-2">
                <div class="title-action">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                </div>
            </div>*@
    </div>
</section>
<section class="content">
    <div>
        <table class="table table-striped table-bordered  dataTables-example">
            @* <table class="table table-striped table-bordered">*@
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.RegName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DisName)
                        @*</th>
                            <th>
                                @Html.DisplayNameFor(model => model.UC.Tehsil.TehsilName)
                            </th>*@
                        @*<th>
                                @Html.DisplayNameFor(model => model.UC.UCName)
                            </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.SchoolID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SName)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.type)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.RegName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DisName)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.UC.Tehsil.TehsilName)
                            </td>*@
                        @*<td>
                                @Html.DisplayFor(modelItem => item.UC.UCName)
                            </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.SchoolID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SName)
                        </td>

                        <td>
                            @{
                                switch (item.type)
                                {
                                    case 1: <text> Potentail </text> break;
                                case 2: <text> Feeder </text> break;
                            case 3: <text> Next Level </text> break;
                    }
                            }
                        </td>
                        <td>
                            @Html.ActionLink("UnVerify", "MneUnVerifyIndicators", new { id = item.SchoolID, SecID = @ViewBag.id })
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.UC.Tehsil.District.RegionID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UC.Tehsil.District.DistrictName)
                    </th>
                    @*<th>
                            @Html.DisplayNameFor(model => model.UC.Tehsil.TehsilName)
                        </th>*@
                    @*<th>
                            @Html.DisplayNameFor(model => model.UC.UCName)
                        </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.SchoolID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SName)
                    </th>
                    @*<th>
                            @Html.DisplayNameFor(model => model.BEMIS)
                        </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.type)
                    </th>
                    @*<th></th>*@
                </tr>
            </tfoot>
        </table>
    </div>
</section>
@section Styles {
    <!-- DataTables -->
    <link rel="stylesheet" href="~/libs/datatables/css/dataTables.bootstrap.min.css">
}
<div id="dynamicContentContainer"></div>
@section Scripts {
    <script src="~/libs/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/libs/datatables/js/dataTables.bootstrap.min.js"></script>
    <script type="text/javascript">$(document).ready(function () {
            // $('#Region-DropdownID').val(null).change();
            // alert('JQuery Entered')
            $(document).ready(function () {
                // $('#Region-DropdownID').val(null).change();
                // alert('JQuery Entered')
                $('.dataTables-example').DataTable({
                    initComplete: function () {
                        this.api().columns().every(function () {
                            var column = this;
                            var select = $('<select><option value=""></option></select>')
                                .appendTo($(column.footer()).empty())
                                .on('change', function () {
                                    var val = $.fn.dataTable.util.escapeRegex(
                                        $(this).val()
                                    );

                                    column
                                        .search(val ? '^' + val + '$' : '', true, false)
                                        .draw();
                                });

                            column.data().unique().sort().each(function (d, j) {
                                select.append('<option value="' + d + '">' + d + '</option>')
                            });
                        });
                    }
                });
                //alert('Table Generated')
            });
            //alert('Table Generated')
        });</script>
}